# Make sure to check the documentation at https://goreleaser.com
version: 2
before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
      - GO_MODULE_NAME=github.com/UpCloudLtd/upcloud-cli/v3
    goos:
      - linux
      - windows
      - darwin
      - freebsd
    goarch:
      - amd64
      - arm64
    main: ./cmd/upctl/main.go
    binary: upctl
    flags:
      - -v
    ldflags:
      - -s -w
      - -X {{.Env.GO_MODULE_NAME}}/internal/config.Version={{.Version}}
      - -X {{.Env.GO_MODULE_NAME}}/internal/config.BuildDate={{.Date}}

archives:
  - formats: tar.gz

    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{- .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}

    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: zip

checksum:
  name_template: 'checksums.txt'

snapshot:
  version_template: "{{ .Tag }}-next"

changelog:
  # Set this to true if you don't want any changelog at all.
  #
  # Warning: this will also ignore any changelog files passed via `--release-notes`,
  # and will render an empty changelog.
  #
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  #
  # Templates: allowed
  disable: false
  sort: asc
  filters:

    # Commit messages matching the regexp listed here will be removed from
    # the changelog
    exclude:
      - '^chore(docs)'
      - '^ci'

nfpms:
  - package_name: upcloud-cli
    file_name_template: "{{ .ConventionalFileName }}"
    vendor: UpCloudLtd.
    homepage: https://upcloud.com/
    maintainer: UpCloud team <contact@upcloud.com>
    description: CLI tool for managing UpCloud services.
    license: MIT
    formats:
      - apk
      - deb
      - rpm

    # Packages your package recommends installing.
    recommends:
      - bash-completion

    # Custom configuration applied only to the RPM packager.
    rpm:
      # The package group. This option is deprecated by most distros
      # but required by old distros like CentOS 5 / EL 5 and earlier.
      group: Unspecified


sboms:
  - documents:
      - ${artifact}.spdx.json

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL or empty if its private hosted.
  github:
    owner: scop
    name: upcloud-cli

  # If set to true, will not auto-publish the release.
  # Available only for GitHub and Gitea.
  #
  # Default: false
  draft: true

  # Whether to remove existing draft releases with the same name before creating
  # a new one.
  # Only effective if `draft` is set to true.
  # Available only for GitHub.
  #
  # Default: false
  # Since: v1.11
  replace_existing_draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: false

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default is `keep-existing`.
  mode: keep-existing

  # You can change the name of the release.
  #
  # Default: '{{.Tag}}' ('{{.PrefixedTag}}' on Pro)
  # Templates: allowed
  name_template: "{{.Tag}}"
